[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vocabsultan"
version = "1.0.0"
description = "一个功能强大的单词记忆程序，采用间隔重复算法，帮助您高效掌握英语词汇"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
authors = [
    {name = "VocabSultan Team", email = "contact@vocabsultan.com"},
]
maintainers = [
    {name = "VocabSultan Team", email = "contact@vocabsultan.com"},
]
keywords = [
    "vocabulary",
    "learning",
    "spaced-repetition",
    "english",
    "education",
    "memory",
    "flashcards"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Education",
    "Topic :: Education :: Computer Aided Instruction (CAI)",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
dependencies = [
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
]

[project.urls]
Homepage = "https://github.com/your-username/VocabSultan"
Documentation = "https://vocabsultan.readthedocs.io"
Repository = "https://github.com/your-username/VocabSultan.git"
"Bug Tracker" = "https://github.com/your-username/VocabSultan/issues"
Changelog = "https://github.com/your-username/VocabSultan/blob/main/CHANGELOG.md"

[project.scripts]
vocabsultan = "vocab_sultan_cli:main"

[tool.hatch.build.targets.wheel]
packages = ["vocabsultan"]

[tool.hatch.build.targets.sdist]
include = [
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
    "/requirements.txt",
    "/pyproject.toml",
    "/core.py",
    "/vocab_sultan_cli.py",
    "/utils.py",
    "/example_usage.py",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=vocabsultan",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["vocabsultan"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
